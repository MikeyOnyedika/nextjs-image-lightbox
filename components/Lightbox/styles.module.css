/* for opening and closing the lightbox */
.OpenLightbox {
	animation-name: openLightbox;
}

.CloseLightbox {
	animation-name: closeLightbox;
}

@keyframes openLightbox {
	from {
		scale: 0.8;
		opacity: 0.8;
	}

	to {
		scale: 1;
		opacity: 1;
	}
}


@keyframes closeLightbox {
	from {
		scale: 1;
		opacity: 1;
	}

	to {
		scale: 0.6;
		opacity: 0;
	}
}

/* styling the lightbox wrapper element */
.Wrapper {
	animation-duration: 100ms;
	animation-timing-function: ease-in-out;
	animation-fill-mode: forwards;
	position: fixed;
	inset: 0;
	width: 100vw;
	z-index: 100;
	background-color: rgba(255, 255, 255, 0.8);
	display: flex;
	justify-content: center;
}

.Wrapper,
.Wrapper * {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

.ContentWrapper {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	width: 100%;
	height: 100%;
}


/* tools menu */
.ToolsMenu {
	display: flex;
	justify-content: space-between;
	align-items: center;
	background-color: white;
	box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
	gap: 3rem;
	width: 100%;
}

.ToolsMenu>h3 {
	font-weight: 400;
	justify-self: flex-start;
	padding-inline-start: 1rem;
	max-width: 20%;
	/* width: 20%; */
	text-overflow: ellipsis;
	line-clamp: 1;
	-webkit-line-clamp: 1;
	overflow: hidden;
	white-space: nowrap;
}

.Options {
	justify-self: center;
	display: flex;
	justify-content: flex-end;
	color: rgba(0, 0, 0, 0.9);
}

.SliderBtn,
.LargeImgNavBtn,
.CloseBtn,
.ToolBtn {
	background: transparent;
	border: none;
}

.ToolBtn {
	font-size: 2.6rem;
	display: flex;
	align-items: center;
}

.OptionBtnIcon {
	padding: 0.7rem;
}

.Enabled {
	color: rgba(0, 0, 0, 0.9);
}

.Disabled {
	color: rgba(160, 160, 160, 0.9);
}

.CloseBtn {
	background-color: transparent;
	outline: none;
	display: flex;
	align-items: center;
	padding: 1rem;
}


/* large image view */

.LargeImageViewWrapper {
	display: flex;
	position: relative;
	height: 100%;
	align-items: center;
}

.LargeImageWrapper {
	position: relative;
	height: 100%;
	width: 100%;
	display: flex;
	z-index: 1;
	gap: 2rem;
	list-style-type: none;
	overflow-x: auto;
	overflow-y: hidden;
	scroll-snap-type: x mandatory;
}

.LargeImageWrapper::-webkit-scrollbar {
	width: 0px;
	height: 0px;
}

.LargeImgItem {
	position: relative;
	width: 100%;
	display: flex;
	max-width: 100%;
	min-width: 100%;
	scroll-snap-align: start;
	overflow: auto;
}

.LargeImgItem::-webkit-scrollbar {
	width: 0px;
	height: 0px;
}

.LargeImage {
	width: 100%;
	object-fit: contain;
	-o-object-fit: contain;
	transition: all 300ms ease;
	object-position: center;
	transform-origin: none;
}

.LargeImage__ShiftX {
	transform-origin: 0 center;
}

.LargeImage__ShiftY {
	transform-origin: center 0;
}

.LargeImage__ShiftXY {
	transform-origin: 0 0;
}

.LargeImage__NoShift {
	transform-origin: none;
}

.LargeImgNavBtn {
	position: absolute;
	background: white;
	color: rgba(0, 0, 0, 0.5);
	display: flex;
	box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
	z-index: 2;
}

.LargeImgNavBtn__Left {
	left: 1rem;
}

.LargeImgNavBtn__Right {
	right: 1rem;
}

.LargeBtnIcon {
	font-size: 3.4rem;
	padding: 0.8rem;
	background-color: rgb(234, 234, 234);
}

.LargeBtnIcon,
.LargeImgNavBtn {
	border-radius: 999999999999999999px;
}


.CloseBtn,
.OptionBtnIcon,
.LargeBtnIcon,
.BtnIcon,
.SliderBtn,
.SliderItemWrapper,
.LargeImgNavBtn {
	cursor: pointer;
}


.CloseBtn:hover,
.ToolBtn:hover,
.LargeBtnIcon:hover,
.BtnIcon:hover,
.SliderBtn:hover,
.SliderItemWrapper:hover,
.LargeImgNavBtn:hover {
	background-color: rgb(220, 220, 220);
}





/* image preview */


.ImagePreviewWrapper {
	display: flex;
	justify-content: space-between;
	align-items: stretch;
	width: 100%;
	height: 5rem;
}

/* slider content overflows the width of the slider */
.Slider {
	display: flex;
	gap: 0.5rem;
	width: 100%;
	list-style-type: none;
	position: relative;
	flex-flow: row nowrap;
	overflow: auto;
}

.Slider::-webkit-scrollbar {
	width: 0px;
	height: 0px;
}

/*  the aspect ratio implemented is really just to provide a width which the inner img element used the in Nextjs Image component will use for setting it's own width and height since it was set to fill */
.SliderItemWrapper {
	position: relative;
	aspect-ratio: 16/9;
	border: 1px solid #5599b7;
	opacity: 0.4;
	min-width: 5rem;
	border-radius: 5px;
	;
}

.ItemActive {
	opacity: 1;
	border-width: 2px;
}

/* preserve the aspect ratio of the actual image*/
.SliderImage {
	object-fit: cover;
	-o-object-fit: cover;
}


.SliderBtn {
	font-size: 1.2rem;
	padding: 0.1rem;
	outline: none;
	background-color: #021922;
}

.SliderBtn .BtnIcon {
	/* background-color: black; */
	/* color: #5599b7; */
	color: #c8eeff;
}

.SliderBtn:hover .BtnIcon,
.SliderBtn:hover {
	background-color: #5599b7;
}


/* Styles for panning of zoomed image */

.Draggable {
	cursor: grabbing;
}


/* Alert dialog styles */
.AlertWrapper {
	position: fixed;
	background: white;
	box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
	transition: transform 300ms ease-in-out;
	top: 1rem;
	display: flex;
	align-items: stretch;
	justify-content: space-between;
	z-index: 2;
	border-radius: 5px;
}

.AlertWrapper .Bar {
	border-radius: 5px 0 0 5px;
	align-self: stretch;
	width: 0.5rem;
	background-color: rgb(34, 130, 34);
}

.AlertWrapper .Message {
	padding: auto;
	color: rgb(32, 126, 32);
	font-size: 0.9rem;
	padding-inline: 1rem;
	padding-block: 0.8rem;
}

.AlertWrapper.Show {
	transform: translateY(0%);
}

.AlertWrapper.Hide {
	transform: translateY(calc(-100% - 10rem));
}


@media (max-width: 360px) {
	.SliderBtn {
		display: none;
	}
}